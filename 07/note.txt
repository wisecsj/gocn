这一道题有很多启发：

1.golang中切片的使用场景。

因为切片可以reslice的特性，相当于切片自身可以保存其index状态。
从而避免了此题在c/c++语言中需要自己去更新下标范围的烦恼



2.slice只支持与nil进行==运算符操作，不支持slice与slice进行比较

对于简单的一维切片，我们可以简单地利用fmt.Sprint来比较

对于负责的、嵌套的，可以使用reflect.DeepEqual()来比较


3.因为slice是值类型（虽然内含底层数组的指针），所以当函数参数为切片，并且希望
在函数内对切片的作用在函数结束也有效，必须传入切片的指针。



